@model SetLight.Abstracciones.ModelosParaUI.EquipmentDto

@{
    ViewBag.Title = "Registrar nuevo equipo";
}

<div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="form-card p-4 shadow-sm">
        <h2 class="text-center mb-4">Registrar nuevo equipo</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.EquipmentName, new { @class = "form-label" })
                @Html.EditorFor(model => model.EquipmentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EquipmentName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Brand, new { @class = "form-label" })
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Model, new { @class = "form-label" })
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.SerialNumber, new { @class = "form-label" })
                @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Description, new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 3 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.RentalValue, new { @class = "form-label" })
                @Html.EditorFor(model => model.RentalValue, new { htmlAttributes = new { @class = "form-control", placeholder = "₡0.00" } })
                @Html.ValidationMessageFor(model => model.RentalValue, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.CategoryId, new { @class = "form-label" })
                <div class="d-flex gap-2">
                    @Html.DropDownListFor(model => model.CategoryId,
                        (IEnumerable<SelectListItem>)ViewBag.Categorias,
                        "-- Seleccione una categoría --",
                        new { @class = "form-control" })

                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#modalEqCategory">
                        Nueva categoría
                    </button>
                </div>
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mt-4 text-center">
                <input type="submit" value="Guardar cambios" class="btn btn-success me-2" />
                @Html.ActionLink("Volver al listado", "ListarEquipment", null, new { @class = "btn btn-dark" })
            </div>
        }
    </div>
</div>

<div class="modal fade" id="modalEqCategory" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="modal-content-category">
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusive")
    <script src="~/Scripts/Modals/EqCategory/EqCategoryModal.js"></script>
}
