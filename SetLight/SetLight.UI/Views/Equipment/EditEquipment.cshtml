@model SetLight.Abstracciones.ModelosParaUI.EquipmentDto

@{
    ViewBag.Title = "Editar equipo";
}

<div class="container mt-4">
    <h2 class="text-center mb-4">Editar equipo</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row justify-content-center">
            <div class="col-md-4 mx-auto">
                <div class="card p-4 shadow-sm">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.EquipmentId)
                    @Html.HiddenFor(model => model.Status)

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.EquipmentName, new { @class = "form-label" })
                        @Html.EditorFor(model => model.EquipmentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EquipmentName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Brand, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Model, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.SerialNumber, new { @class = "form-label" })
                        @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Description, new { @class = "form-label" })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 3 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.RentalValue, new { @class = "form-label" })
                        @Html.EditorFor(model => model.RentalValue, new { htmlAttributes = new { @class = "form-control", placeholder = "₡0.00" } })
                        @Html.ValidationMessageFor(model => model.RentalValue, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.CategoryId, new { @class = "form-label" })
                        @Html.DropDownListFor(model => model.CategoryId,
                            (IEnumerable<SelectListItem>)ViewBag.Categorias,
                            "-- Seleccione una categoría --",
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group text-center">
                        <input type="submit" value="Guardar cambios" class="btn btn-success me-2" />
                        @Html.ActionLink("Volver al listado", "ListarEquipment", null, new { @class = "btn btn-dark" })
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
